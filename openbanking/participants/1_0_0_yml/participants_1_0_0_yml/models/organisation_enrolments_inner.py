# coding: utf-8

"""
    Participantes Open Finance Brasil

    Informações sobre os participantes do Open Finance Brasil que estão registrados no Diretório.  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class OrganisationEnrolmentsInner(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'organisation_id': 'OrganisationId',
        'client_secret': 'str',
        'redirect_uris': 'list[str]',
        'token_endpoint_auth_method': 'str',
        'grant_types': 'list[str]',
        'response_types': 'list[str]',
        'client_name': 'str',
        'client_uri': 'str',
        'logo_uri': 'str',
        'tos_uri': 'str',
        'policy_uri': 'str',
        'jwks_uri': 'str',
        'jwks': 'object'
    }

    attribute_map = {
        'organisation_id': 'OrganisationId',
        'client_secret': 'ClientSecret',
        'redirect_uris': 'RedirectUris',
        'token_endpoint_auth_method': 'TokenEndpointAuthMethod',
        'grant_types': 'GrantTypes',
        'response_types': 'ResponseTypes',
        'client_name': 'ClientName',
        'client_uri': 'ClientUri',
        'logo_uri': 'LogoUri',
        'tos_uri': 'TosUri',
        'policy_uri': 'PolicyUri',
        'jwks_uri': 'JwksUri',
        'jwks': 'Jwks'
    }

    def __init__(self, organisation_id=None, client_secret=None, redirect_uris=None, token_endpoint_auth_method=None, grant_types=None, response_types=None, client_name=None, client_uri=None, logo_uri=None, tos_uri=None, policy_uri=None, jwks_uri=None, jwks=None):  # noqa: E501
        """OrganisationEnrolmentsInner - a model defined in Swagger"""  # noqa: E501
        self._organisation_id = None
        self._client_secret = None
        self._redirect_uris = None
        self._token_endpoint_auth_method = None
        self._grant_types = None
        self._response_types = None
        self._client_name = None
        self._client_uri = None
        self._logo_uri = None
        self._tos_uri = None
        self._policy_uri = None
        self._jwks_uri = None
        self._jwks = None
        self.discriminator = None
        if organisation_id is not None:
            self.organisation_id = organisation_id
        if client_secret is not None:
            self.client_secret = client_secret
        if redirect_uris is not None:
            self.redirect_uris = redirect_uris
        if token_endpoint_auth_method is not None:
            self.token_endpoint_auth_method = token_endpoint_auth_method
        if grant_types is not None:
            self.grant_types = grant_types
        if response_types is not None:
            self.response_types = response_types
        if client_name is not None:
            self.client_name = client_name
        if client_uri is not None:
            self.client_uri = client_uri
        if logo_uri is not None:
            self.logo_uri = logo_uri
        if tos_uri is not None:
            self.tos_uri = tos_uri
        if policy_uri is not None:
            self.policy_uri = policy_uri
        if jwks_uri is not None:
            self.jwks_uri = jwks_uri
        if jwks is not None:
            self.jwks = jwks

    @property
    def organisation_id(self):
        """Gets the organisation_id of this OrganisationEnrolmentsInner.  # noqa: E501


        :return: The organisation_id of this OrganisationEnrolmentsInner.  # noqa: E501
        :rtype: OrganisationId
        """
        return self._organisation_id

    @organisation_id.setter
    def organisation_id(self, organisation_id):
        """Sets the organisation_id of this OrganisationEnrolmentsInner.


        :param organisation_id: The organisation_id of this OrganisationEnrolmentsInner.  # noqa: E501
        :type: OrganisationId
        """

        self._organisation_id = organisation_id

    @property
    def client_secret(self):
        """Gets the client_secret of this OrganisationEnrolmentsInner.  # noqa: E501

        Client secret generated by Directory  # noqa: E501

        :return: The client_secret of this OrganisationEnrolmentsInner.  # noqa: E501
        :rtype: str
        """
        return self._client_secret

    @client_secret.setter
    def client_secret(self, client_secret):
        """Sets the client_secret of this OrganisationEnrolmentsInner.

        Client secret generated by Directory  # noqa: E501

        :param client_secret: The client_secret of this OrganisationEnrolmentsInner.  # noqa: E501
        :type: str
        """

        self._client_secret = client_secret

    @property
    def redirect_uris(self):
        """Gets the redirect_uris of this OrganisationEnrolmentsInner.  # noqa: E501


        :return: The redirect_uris of this OrganisationEnrolmentsInner.  # noqa: E501
        :rtype: list[str]
        """
        return self._redirect_uris

    @redirect_uris.setter
    def redirect_uris(self, redirect_uris):
        """Sets the redirect_uris of this OrganisationEnrolmentsInner.


        :param redirect_uris: The redirect_uris of this OrganisationEnrolmentsInner.  # noqa: E501
        :type: list[str]
        """

        self._redirect_uris = redirect_uris

    @property
    def token_endpoint_auth_method(self):
        """Gets the token_endpoint_auth_method of this OrganisationEnrolmentsInner.  # noqa: E501


        :return: The token_endpoint_auth_method of this OrganisationEnrolmentsInner.  # noqa: E501
        :rtype: str
        """
        return self._token_endpoint_auth_method

    @token_endpoint_auth_method.setter
    def token_endpoint_auth_method(self, token_endpoint_auth_method):
        """Sets the token_endpoint_auth_method of this OrganisationEnrolmentsInner.


        :param token_endpoint_auth_method: The token_endpoint_auth_method of this OrganisationEnrolmentsInner.  # noqa: E501
        :type: str
        """

        self._token_endpoint_auth_method = token_endpoint_auth_method

    @property
    def grant_types(self):
        """Gets the grant_types of this OrganisationEnrolmentsInner.  # noqa: E501


        :return: The grant_types of this OrganisationEnrolmentsInner.  # noqa: E501
        :rtype: list[str]
        """
        return self._grant_types

    @grant_types.setter
    def grant_types(self, grant_types):
        """Sets the grant_types of this OrganisationEnrolmentsInner.


        :param grant_types: The grant_types of this OrganisationEnrolmentsInner.  # noqa: E501
        :type: list[str]
        """

        self._grant_types = grant_types

    @property
    def response_types(self):
        """Gets the response_types of this OrganisationEnrolmentsInner.  # noqa: E501


        :return: The response_types of this OrganisationEnrolmentsInner.  # noqa: E501
        :rtype: list[str]
        """
        return self._response_types

    @response_types.setter
    def response_types(self, response_types):
        """Sets the response_types of this OrganisationEnrolmentsInner.


        :param response_types: The response_types of this OrganisationEnrolmentsInner.  # noqa: E501
        :type: list[str]
        """

        self._response_types = response_types

    @property
    def client_name(self):
        """Gets the client_name of this OrganisationEnrolmentsInner.  # noqa: E501

        ORG name as per eIDAS certificate  # noqa: E501

        :return: The client_name of this OrganisationEnrolmentsInner.  # noqa: E501
        :rtype: str
        """
        return self._client_name

    @client_name.setter
    def client_name(self, client_name):
        """Sets the client_name of this OrganisationEnrolmentsInner.

        ORG name as per eIDAS certificate  # noqa: E501

        :param client_name: The client_name of this OrganisationEnrolmentsInner.  # noqa: E501
        :type: str
        """

        self._client_name = client_name

    @property
    def client_uri(self):
        """Gets the client_uri of this OrganisationEnrolmentsInner.  # noqa: E501

        A compliant URI string of a web page providing information about the client  # noqa: E501

        :return: The client_uri of this OrganisationEnrolmentsInner.  # noqa: E501
        :rtype: str
        """
        return self._client_uri

    @client_uri.setter
    def client_uri(self, client_uri):
        """Sets the client_uri of this OrganisationEnrolmentsInner.

        A compliant URI string of a web page providing information about the client  # noqa: E501

        :param client_uri: The client_uri of this OrganisationEnrolmentsInner.  # noqa: E501
        :type: str
        """

        self._client_uri = client_uri

    @property
    def logo_uri(self):
        """Gets the logo_uri of this OrganisationEnrolmentsInner.  # noqa: E501

        A compliant URI  # noqa: E501

        :return: The logo_uri of this OrganisationEnrolmentsInner.  # noqa: E501
        :rtype: str
        """
        return self._logo_uri

    @logo_uri.setter
    def logo_uri(self, logo_uri):
        """Sets the logo_uri of this OrganisationEnrolmentsInner.

        A compliant URI  # noqa: E501

        :param logo_uri: The logo_uri of this OrganisationEnrolmentsInner.  # noqa: E501
        :type: str
        """

        self._logo_uri = logo_uri

    @property
    def tos_uri(self):
        """Gets the tos_uri of this OrganisationEnrolmentsInner.  # noqa: E501

        A compliant URI string that points to a human-readable terms of service document for the client  # noqa: E501

        :return: The tos_uri of this OrganisationEnrolmentsInner.  # noqa: E501
        :rtype: str
        """
        return self._tos_uri

    @tos_uri.setter
    def tos_uri(self, tos_uri):
        """Sets the tos_uri of this OrganisationEnrolmentsInner.

        A compliant URI string that points to a human-readable terms of service document for the client  # noqa: E501

        :param tos_uri: The tos_uri of this OrganisationEnrolmentsInner.  # noqa: E501
        :type: str
        """

        self._tos_uri = tos_uri

    @property
    def policy_uri(self):
        """Gets the policy_uri of this OrganisationEnrolmentsInner.  # noqa: E501

        A compliant URI string that points to a human-readable privacy policy document  # noqa: E501

        :return: The policy_uri of this OrganisationEnrolmentsInner.  # noqa: E501
        :rtype: str
        """
        return self._policy_uri

    @policy_uri.setter
    def policy_uri(self, policy_uri):
        """Sets the policy_uri of this OrganisationEnrolmentsInner.

        A compliant URI string that points to a human-readable privacy policy document  # noqa: E501

        :param policy_uri: The policy_uri of this OrganisationEnrolmentsInner.  # noqa: E501
        :type: str
        """

        self._policy_uri = policy_uri

    @property
    def jwks_uri(self):
        """Gets the jwks_uri of this OrganisationEnrolmentsInner.  # noqa: E501

        A compliant URI string referencing the client's JSON Web Key (JWK) Set  # noqa: E501

        :return: The jwks_uri of this OrganisationEnrolmentsInner.  # noqa: E501
        :rtype: str
        """
        return self._jwks_uri

    @jwks_uri.setter
    def jwks_uri(self, jwks_uri):
        """Sets the jwks_uri of this OrganisationEnrolmentsInner.

        A compliant URI string referencing the client's JSON Web Key (JWK) Set  # noqa: E501

        :param jwks_uri: The jwks_uri of this OrganisationEnrolmentsInner.  # noqa: E501
        :type: str
        """

        self._jwks_uri = jwks_uri

    @property
    def jwks(self):
        """Gets the jwks of this OrganisationEnrolmentsInner.  # noqa: E501

        Client's JSON Web Key Set [RFC7517] document value  # noqa: E501

        :return: The jwks of this OrganisationEnrolmentsInner.  # noqa: E501
        :rtype: object
        """
        return self._jwks

    @jwks.setter
    def jwks(self, jwks):
        """Sets the jwks of this OrganisationEnrolmentsInner.

        Client's JSON Web Key Set [RFC7517] document value  # noqa: E501

        :param jwks: The jwks of this OrganisationEnrolmentsInner.  # noqa: E501
        :type: object
        """

        self._jwks = jwks

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(OrganisationEnrolmentsInner, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, OrganisationEnrolmentsInner):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
